import{jsx as i,jsxs as M}from"@dropins/tools/preact-jsx-runtime.js";import{Slot as H,classes as J}from"@dropins/tools/lib.js";import{v as K,u as Q,a as X}from"../chunks/usePasswordValidationMessage.js";import"@dropins/tools/event-bus.js";import"@dropins/tools/recaptcha.js";import{a as Y}from"../chunks/getCustomerToken.js";import{r as Z}from"../chunks/resetPassword.js";import{c as q,g as $,u as W,T as O,F as C,B as R}from"../chunks/useInLineAlert.js";import{useState as h,useEffect as V,useCallback as k}from"@dropins/tools/preact-hooks.js";import{useText as B}from"@dropins/tools/i18n.js";import{InLineAlert as tt,InputPassword as et}from"@dropins/tools/components.js";import"../chunks/getStoreConfig.js";import"../chunks/network-error.js";import"@dropins/tools/fetch-graphql.js";import"../chunks/initialize.js";import"../chunks/setReCaptchaToken.js";import"@dropins/tools/preact-compat.js";const j=(u,c)=>u.split("&").filter(r=>r.includes(c)).map(r=>r.split("=")[1])[0],at=({isEmailConfirmationRequired:u,signInOnSuccess:c,passwordConfigs:a,routeRedirectOnSignIn:r,routeWrongUrlRedirect:s,onErrorCallback:n,onSuccessCallback:l,handleSetInLineAlertProps:m,routeRedirectOnPasswordUpdate:p})=>{const e=B({errorNotification:"Auth.Notification.errorNotification",updatePasswordMessage:"Auth.Notification.updatePasswordMessage",customerTokenErrorMessage:"Auth.Api.customerTokenErrorMessage"}),[v,N]=h({userName:"",status:!1}),[y,L]=h(""),[w,F]=h(!1),[P,_]=h(""),[x,U]=h(""),[b,o]=h(!1),[D,T]=h(!1);V(()=>{w&&(y.length?T(!1):T(!0))},[w,y]),V(()=>{const{search:f}=window.location;!f.includes("token=")&&!f.includes("email=")&&q(s)&&(window.location.href=s());const t=decodeURIComponent(f),A=j(t,"token"),S=j(t,"email");_(S),U(A)},[s]);const G=k(async f=>{f.preventDefault(),o(!0);const t=$(f.target),A=(t==null?void 0:t.password)&&P&&x;t!=null&&t.password||(T(!0),o(!1));const S=(a==null?void 0:a.requiredCharacterClasses)||0,E=(a==null?void 0:a.minLength)||0;if(!K(t==null?void 0:t.password,S)||t.password.length<+E){F(!0),o(!1);return}if(!A){m({type:"error",text:e.errorNotification}),o(!1);return}const{message:g,success:I}=await Z(P,x,t.password);if(I){if(u||!u&&!c){q(p)&&(window.location.href=p()),F(!0),o(!1),m({type:"success",text:e.updatePasswordMessage}),L("");return}const d=await Y({email:P,password:t.password,handleSetInLineAlertProps:m,onErrorCallback:n,translations:e});d!=null&&d.userName&&(q(r)?window.location.href=r():(N({userName:d==null?void 0:d.userName,status:!0}),l==null||l(d==null?void 0:d.userName)))}else m({type:"error",text:g}),n==null||n({message:g,success:I});o(!1)},[P,x,a,u,e,c,m,r,p,n,l]),z=k(f=>{L(f)},[]);return{passwordError:D,isSuccessful:v,updatePasswordValue:y,isClickSubmit:w,isLoading:b,submitUpdatePassword:G,handleSetUpdatePasswordValue:z}},st=({signInOnSuccess:u=!0,formSize:c="default",routeRedirectOnSignIn:a,routeWrongUrlRedirect:r,slots:s,onErrorCallback:n,onSuccessCallback:l,routeRedirectOnPasswordUpdate:m})=>{const p=B({title:"Auth.UpdatePasswordForm.title",buttonPrimary:"Auth.UpdatePasswordForm.buttonPrimary",placeholder:"Auth.InputPassword.placeholder",floatingLabel:"Auth.InputPassword.floatingLabel"}),{passwordConfigs:e,isEmailConfirmationRequired:v}=Q(),{inLineAlertProps:N,handleSetInLineAlertProps:y}=W(),{passwordError:L,isSuccessful:w,updatePasswordValue:F,isClickSubmit:P,isLoading:_,submitUpdatePassword:x,handleSetUpdatePasswordValue:U}=at({isEmailConfirmationRequired:v,signInOnSuccess:u,passwordConfigs:e,routeRedirectOnSignIn:a,routeWrongUrlRedirect:r,onErrorCallback:n,onSuccessCallback:l,handleSetInLineAlertProps:y,routeRedirectOnPasswordUpdate:m}),{isValidUniqueSymbols:b,defaultLengthMessage:o}=X({password:F,isClickSubmit:P,passwordConfigs:e});return w.status&&(s!=null&&s.SuccessNotification)?i(H,{"data-testid":"successNotificationTestId",name:"SuccessNotification",slot:s==null?void 0:s.SuccessNotification,context:{isSuccessful:w}}):M("div",{className:J(["auth-updatePasswordForm",c]),children:[i(O,{text:p.title,bottomLine:!1,className:"auth-updatePasswordForm__title"}),N.text?i(tt,{className:"auth-updatePasswordForm__notification",variant:"secondary",heading:N.text,icon:N.icon}):null,M(C,{name:"updatePassword_form",className:"auth-updatePasswordForm__form",submitCallback:x,isLoading:_,fieldsConfig:[],children:[i("div",{style:"display: none;",children:i("input",{type:"text",id:"username",name:"username",autocomplete:"username"})}),i(et,{defaultValue:F,onValue:U,className:"auth-updatePasswordForm__form__item",autoComplete:"new-password",name:"password",error:L||b==="error"||(o==null?void 0:o.status)==="error",minLength:e==null?void 0:e.minLength,uniqueSymbolsStatus:b,validateLengthConfig:o,requiredCharacterClasses:e==null?void 0:e.requiredCharacterClasses,placeholder:p.placeholder,floatingLabel:p.floatingLabel}),i("div",{className:"auth-updatePasswordForm__button",children:i(R,{type:"submit",buttonText:p.buttonPrimary,variant:"primary",enableLoader:_})})]})]})},xt=({slots:u,formSize:c,signInOnSuccess:a,routeRedirectOnPasswordUpdate:r,routeRedirectOnSignIn:s,routeWrongUrlRedirect:n,onErrorCallback:l,onSuccessCallback:m})=>i("div",{className:"auth-update-password",children:i(st,{formSize:c,signInOnSuccess:a,routeRedirectOnSignIn:s,routeWrongUrlRedirect:n,onErrorCallback:l,onSuccessCallback:m,slots:u,routeRedirectOnPasswordUpdate:r})});export{xt as UpdatePassword,xt as default};
